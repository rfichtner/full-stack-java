
package software.xdev.fullstackjava.pizzashop.ui;

import com.rapidclipse.framework.server.data.converter.ConverterBuilder;
import com.vaadin.flow.component.ClickEvent;
import com.vaadin.flow.component.ComponentEvent;
import com.vaadin.flow.component.ComponentEventListener;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.formlayout.FormLayout;
import com.vaadin.flow.component.formlayout.FormLayout.FormItem;
import com.vaadin.flow.component.html.Label;
import com.vaadin.flow.component.html.Paragraph;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.component.textfield.NumberField;
import com.vaadin.flow.component.textfield.TextField;
import com.vaadin.flow.data.binder.Binder;
import com.vaadin.flow.router.Route;

import software.xdev.fullstackjava.pizzashop.HasTitle;
import software.xdev.fullstackjava.pizzashop.data.DataStore;
import software.xdev.fullstackjava.pizzashop.domain.Pizza;


@Route(value = "pictures", layout = MainLayout.class)
public class PicturesView extends VerticalLayout implements HasTitle
{
	public PicturesView()
	{
		super();
		this.initUI();
	}
	
	@Override
	public String getTitle()
	{
		return "Pictures";
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #button}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button_onClick(final ClickEvent<Button> event)
	{
		final Pizza p = new Pizza(this.txtMenuId.getValue(), this.txtName.getValue(),
			this.nrCalories.getValue().intValue(), this.txtDesciption.getValue());
		DataStore.Instance.pizzas.add(p);

	}
	
	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.paragraph     = new Paragraph();
		this.form          = new FormLayout();
		this.formItem      = new FormItem();
		this.lblMenuId     = new Label();
		this.txtMenuId     = new TextField();
		this.formItem2     = new FormItem();
		this.lblName       = new Label();
		this.txtName       = new TextField();
		this.formItem3     = new FormItem();
		this.lblCalories   = new Label();
		this.nrCalories    = new NumberField();
		this.formItem4     = new FormItem();
		this.lblDesciption = new Label();
		this.txtDesciption = new TextField();
		this.binder        = new Binder<>();
		this.button        = new Button();

		this.paragraph.setText(
			"This lists all the pictures that we want to share with the user. Maybe some nice vacation pictures :)");
		this.form.setResponsiveSteps(
			new FormLayout.ResponsiveStep("0px", 1, FormLayout.ResponsiveStep.LabelsPosition.TOP),
			new FormLayout.ResponsiveStep("500px", 2, FormLayout.ResponsiveStep.LabelsPosition.TOP),
			new FormLayout.ResponsiveStep("1000px", 3, FormLayout.ResponsiveStep.LabelsPosition.ASIDE));
		this.lblMenuId.setText("menuId");
		this.txtMenuId.setTabIndex(1);
		this.lblName.setText("name");
		this.txtName.setTabIndex(2);
		this.lblCalories.setText("calories");
		this.nrCalories.setTabIndex(3);
		this.lblDesciption.setText("desciption");
		this.txtDesciption.setTabIndex(4);
		this.button.setText("Save");

		this.binder.forField(this.txtMenuId).withNullRepresentation("").bind(Pizza::getMenuId, (v, x) -> {});
		this.binder.forField(this.txtName).withNullRepresentation("").bind(Pizza::getName, (v, x) -> {});
		this.binder.forField(this.nrCalories).withConverter(ConverterBuilder.DoubleToInteger().build())
			.bind(Pizza::getCalories, (v, x) -> {});
		this.binder.forField(this.txtDesciption).withNullRepresentation("").bind(Pizza::getDesciption, (v, x) -> {});

		this.lblMenuId.setSizeUndefined();
		this.lblMenuId.getElement().setAttribute("slot", "label");
		this.txtMenuId.setWidthFull();
		this.txtMenuId.setHeight(null);
		this.formItem.add(this.lblMenuId, this.txtMenuId);
		this.lblName.setSizeUndefined();
		this.lblName.getElement().setAttribute("slot", "label");
		this.txtName.setWidthFull();
		this.txtName.setHeight(null);
		this.formItem2.add(this.lblName, this.txtName);
		this.lblCalories.setSizeUndefined();
		this.lblCalories.getElement().setAttribute("slot", "label");
		this.nrCalories.setWidthFull();
		this.nrCalories.setHeight(null);
		this.formItem3.add(this.lblCalories, this.nrCalories);
		this.lblDesciption.setSizeUndefined();
		this.lblDesciption.getElement().setAttribute("slot", "label");
		this.txtDesciption.setWidthFull();
		this.txtDesciption.setHeight(null);
		this.formItem4.add(this.lblDesciption, this.txtDesciption);
		this.form.add(this.formItem, this.formItem2, this.formItem3, this.formItem4);
		this.paragraph.setWidthFull();
		this.paragraph.setHeight(null);
		this.form.setSizeUndefined();
		this.button.setSizeUndefined();
		this.add(this.paragraph, this.form, this.button);
		this.setSizeFull();

		this.button.addClickListener(this::button_onClick);
	} // </generated-code>
	
	// <generated-code name="variables">
	private FormLayout    form;
	private Button        button;
	private NumberField   nrCalories;
	private Label         lblMenuId, lblName, lblCalories, lblDesciption;
	private Binder<Pizza> binder;
	private Paragraph     paragraph;
	private TextField     txtMenuId, txtName, txtDesciption;
	private FormItem      formItem, formItem2, formItem3, formItem4;
	// </generated-code>
	
}


package software.xdev.fullstackjava.pizzashop.ui;

import java.util.Arrays;
import java.util.Collection;

import com.rapidclipse.framework.server.resources.CaptionUtils;
import com.rapidclipse.framework.server.ui.filter.FilterComponent;
import com.rapidclipse.framework.server.ui.filter.GridFilterSubjectFactory;
import com.vaadin.flow.component.grid.Grid;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.data.provider.ListDataProvider;
import com.vaadin.flow.router.Route;

import software.xdev.fullstackjava.pizzashop.HasTitle;
import software.xdev.fullstackjava.pizzashop.data.DataStore;
import software.xdev.fullstackjava.pizzashop.domain.Pizza;


@Route(value = "todos", layout = MainLayout.class)
public class TodosView extends VerticalLayout implements HasTitle
{
	public TodosView()
	{
		super();
		this.initUI();
		final PizzaDataProvider pdp = new PizzaDataProvider(DataStore.Instance.pizzas);
		this.grid.setDataProvider(pdp);
		this.filterComponent.connectWith(pdp);
	}

	@Override
	public String getTitle()
	{
		return "Todos";
	}

	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.filterComponent = new FilterComponent();
		this.grid            = new Grid<>(Pizza.class, false);

		this.grid.addColumn(Pizza::getMenuId).setKey("menuId")
			.setHeader(CaptionUtils.resolveCaption(Pizza.class, "menuId"))
			.setSortable(true);
		this.grid.addColumn(Pizza::getName).setKey("name").setHeader(CaptionUtils.resolveCaption(Pizza.class, "name"))
			.setSortable(true);
		this.grid.addColumn(Pizza::getCalories).setKey("calories")
			.setHeader(CaptionUtils.resolveCaption(Pizza.class, "calories")).setSortable(true);
		this.grid.addColumn(Pizza::getdescription).setKey("description")
			.setHeader(CaptionUtils.resolveCaption(Pizza.class, "description")).setSortable(true);
		this.grid.setSelectionMode(Grid.SelectionMode.SINGLE);

		this.filterComponent.connectWith(this.grid.getDataProvider());
		this.filterComponent.setFilterSubject(GridFilterSubjectFactory.CreateFilterSubject(this.grid,
			Arrays.asList("menuId", "name", "description"), Arrays.asList("menuId", "name", "calories", "description")));

		this.filterComponent.setWidthFull();
		this.filterComponent.setHeight(null);
		this.grid.setSizeFull();
		this.add(this.filterComponent, this.grid);
		this.setFlexGrow(1.0, this.grid);
		this.setSizeFull();
	} // </generated-code>

	class PizzaDataProvider extends ListDataProvider<Pizza>
	{
		
		public PizzaDataProvider(final Collection<Pizza> items)
		{
			super(items);
		}
		
	}

	// <generated-code name="variables">
	private FilterComponent filterComponent;
	private Grid<Pizza>     grid;
	// </generated-code>
	
}
